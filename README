// EvohomeTemperatureSensor - RFBee firmware for evohome compatible wireless temperature sensor
// Copyright (c) 2015 Hydrogenetic
//
// based on HoneyCommLite - Alternative RFBee firmware to communicate with
//                 Evohome / Hometronix / CM67z and other Honeywell 868MHz based RF devices.
//
// Copyright (C) 2012 JB137
// Copyright (C) 2011 Wladimir Komarow
//
// and work from CrazyDiamond and others at http://www.domoticaforum.eu/viewtopic.php?f=7&t=5806
//
// Includes a stripped down version of DHT library written by Adafruit Industries
// (originally distributed under the MIT license)
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
// Set voltage switch on UartSBee to 3.3v
// Compile for RFbee using board: Arduino Pro or Pro Mini (3.3V, 8MHz) w/ATmega 168

In conjunction with a DHT22 this creates an evohome compatible temperature sensor. There is also support for a bind button if required (uncomment POBIND to trigger a one off power on bind message). This sketch can also serve as a template for creation of an evohome compatible wireless device. 

You will require an RFBee, a DHT22 and an optional tactile button to trigger the binding message. The DHT22 is connected left to right +3.3v PD4 N/C GND a pull up resistor of 10k is recommended from PD4 to +3.3v. The optional tactile button connects between PB0 (PCINT0) and GND. The internal pull up is used but I have added a 1k resistor between the switch and GND to limit the output current if the pin is incorrectly set to output. The pins can be reconfigured in the sketch but please be aware Arduino pin numbers are not the same as the Atmega pin names. The pin change interrupt would also need to be reconfigured appropriately. There are also some serial debugging messages which are provided by uncommenting the DEBUG definition.

You will probably also require a UartSBee for to upload the firmware and you can also solder on header pins to connect to the ATmega168 (Arduino) via DuPont cables. You will then need the Arduino IDE from http://arduino.cc/en/main/software or via sudo apt-get install arduino. The RFBee is a 3.3v device so you should set the voltage switch on the UartSBee to 3.3v instead of 5v. Once you have the IDE installed you should copy the sketch (EvohomeTemperatureSensor folder) to your Sketchbook folder. You then select the board as above, choose the appropriate serial device and select upload from the menu.

Note: This firmware has been created through guess work as to the correct messages / binding procedure to use and although it does appear to work fine with my controller your mileage may vary. You should therefore only proceed on the understanding that this is an experimental firmware which may possibly require some additional work or could have bugs that are difficult to solve.
